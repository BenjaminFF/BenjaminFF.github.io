{"version":3,"sources":["pages/home/index.js","pages/schulte/index.js","router/index.js","pages/subtitleLearn/index.js","App.js","serviceWorker.js","index.js"],"names":["Schulte","className","Component","props","schulteModes","schulteRecordsJson","localStorage","getItem","mode","record","text","JSON","parse","forEach","element","index","selected","cells","i","push","active","gridTemplateColumns","Math","sqrt","gridTemplateRows","state","curMode","_","shuffle","curCellIndex","gameStarted","recordInterval","tempRecord","onModeChange","bind","startGame","minute","floor","second","this","setInterval","setState","event","target","value","filter","schulteMode","clearInterval","cellIndex","cell","setTimeout","alert","formatRecord","setItem","stringify","newCells","onChange","map","key","onClick","style","join","onCellClick","routes","path","exact","name","component","home","playing","subtitleArr","mAudio","togglePlay","document","getElementById","fetch","then","res","item","ontimeupdate","selectedSubTitle","currentTime","start","end","pause","play","width","height","autoPlay","paused","id","src","schulte","App","pageSize","isMobile","length","pages","parseInt","window","innerWidth","marginTop","pageItems","colors","links","slice","bg","curPage","pathname","location","isHome","history","listen","router","onRouterChange","link","backgroundColor","enterLink","to","pageItem","pageToggle","route","withRouter","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cee497f.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nexport default class Schulte extends Component {\r\n  render() {\r\n    return <h1 className=\"schulte\">Hello, Home</h1>;\r\n  }\r\n}\r\n","/* eslint-disable prefer-const */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable max-len */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react'\r\nimport './index.scss'\r\nimport _ from 'lodash'\r\n\r\nexport default class Schulte extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let schulteModes;\r\n    const schulteRecordsJson = localStorage.getItem('schulte-record');\r\n    if (schulteRecordsJson === null) {\r\n      schulteModes = [\r\n        { mode: 16, record: 0, text: '4x4' },\r\n        { mode: 25, record: 0, text: '5x5' },\r\n        { mode: 36, record: 0, text: '6x6' },\r\n        { mode: 49, record: 0, text: '7x7' },\r\n      ];\r\n    } else {\r\n      schulteModes = JSON.parse(schulteRecordsJson);\r\n    }\r\n    schulteModes.forEach((element, index) => {\r\n      index === 0 ? element.selected = true : element.selected = false\r\n    });\r\n    const cells = []\r\n    for (let i = 0; i < schulteModes[0].mode; i += 1) {\r\n      cells.push({ index: i + 1, active: false })\r\n    }\r\n    const gridTemplateColumns = `repeat(${Math.sqrt(schulteModes[0].mode)},5rem)`\r\n    const gridTemplateRows = `repeat( ${Math.sqrt(schulteModes[0].mode)},5rem)`\r\n    this.state = {\r\n      schulteModes,\r\n      curMode: schulteModes[0],\r\n      gridTemplateRows,\r\n      gridTemplateColumns,\r\n      cells: _.shuffle(cells),\r\n      curCellIndex: 1,\r\n      gameStarted: false,\r\n      recordInterval: null,\r\n      tempRecord: 0,\r\n    };\r\n    this.onModeChange = this.onModeChange.bind(this)\r\n    this.startGame = this.startGame.bind(this)\r\n  }\r\n\r\n  formatRecord(record) {\r\n    const minute = Math.floor(record / 60)\r\n    const second = record % 60\r\n    return `${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}`\r\n  }\r\n\r\n  startGame() {\r\n    this.state.recordInterval = setInterval(() => {\r\n      let { tempRecord } = this.state;\r\n      tempRecord++;\r\n      this.setState({\r\n        tempRecord,\r\n      });\r\n    }, 1000);\r\n    this.setState({\r\n      gameStarted: true,\r\n    })\r\n  }\r\n\r\n  onModeChange(event) {\r\n    const mode = event.target.value;\r\n    const curMode = this.state.schulteModes.filter((schulteMode) => schulteMode.mode == mode)[0]\r\n    const gridTemplateColumns = `repeat(${Math.sqrt(curMode.mode)},5rem)`\r\n    const gridTemplateRows = `repeat( ${Math.sqrt(curMode.mode)},5rem)`\r\n    const cells = []\r\n    for (let i = 0; i < curMode.mode; i += 1) {\r\n      cells.push({ index: i + 1, active: false });\r\n    }\r\n    this.setState({\r\n      curMode,\r\n      gridTemplateColumns,\r\n      gridTemplateRows,\r\n      cells: _.shuffle(cells),\r\n      curCellIndex: 1,\r\n      gameStarted: false,\r\n      tempRecord: 0,\r\n    });\r\n    if (this.state.recordInterval != null) {\r\n      clearInterval(this.state.recordInterval)\r\n    }\r\n  }\r\n\r\n  onCellClick(cellIndex) {\r\n    if (!this.state.gameStarted) {\r\n      return\r\n    }\r\n    const cells = [...this.state.cells];\r\n    let { curCellIndex, curMode, tempRecord } = this.state\r\n    if (cellIndex == curCellIndex) {\r\n      cells.filter((cell) => cell.index == cellIndex)[0].active = true\r\n      curCellIndex++\r\n    }\r\n    this.setState({\r\n      cells,\r\n      curCellIndex,\r\n    });\r\n\r\n    if (curCellIndex > curMode.mode) {\r\n      if (this.state.recordInterval != null) {\r\n        clearInterval(this.state.recordInterval);\r\n      }\r\n      setTimeout(() => {\r\n        alert(`你完成了，记录为${this.formatRecord(tempRecord)}`);\r\n        if (tempRecord < curMode.record || curMode.record == 0) {\r\n          curMode.record = tempRecord;\r\n          localStorage.setItem('schulte-record', JSON.stringify(this.state.schulteModes));\r\n          this.setState({\r\n            curMode,\r\n          })\r\n        }\r\n\r\n        const newCells = []\r\n        for (let i = 0; i < curMode.mode; i += 1) {\r\n          newCells.push({ index: i + 1, active: false })\r\n        }\r\n        this.setState({\r\n          gameStarted: false,\r\n          tempRecord: 0,\r\n          cells: _.shuffle(newCells),\r\n          curCellIndex: 1,\r\n        });\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"schulte-container\">\r\n        <div className=\"inner\">\r\n          <div className=\"schulte-nav\">\r\n            <select onChange={this.onModeChange}>\r\n              {\r\n                this.state.schulteModes.map((schulteMode) => (\r\n                  <option value={schulteMode.mode} key={schulteMode.mode}>{schulteMode.text}</option>\r\n                ))\r\n              }\r\n            </select>\r\n            {!this.state.gameStarted && (\r\n              <div>\r\n                最高纪录：\r\n                {this.formatRecord(this.state.curMode.record)}\r\n              </div>\r\n            )}\r\n            {this.state.gameStarted && (\r\n              <div>\r\n                {this.formatRecord(this.state.tempRecord)}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"schulte-body\">\r\n            {!this.state.gameStarted && <div className=\"button\" onClick={this.startGame}>开始</div>}\r\n            <div className=\"cells-container\" style={{ gridTemplateColumns: this.state.gridTemplateColumns, gridTemplateRows: this.state.gridTemplateRows }}>\r\n              {this.state.cells.map((cell) => (\r\n                <div className={['cell', cell.active ? 'active' : ''].join(' ')} onClick={this.onCellClick.bind(this, cell.index)} key={cell.index}>\r\n                  {cell.index}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import home from '../pages/home';\r\nimport schulte from '../pages/schulte';\r\nimport subtitleLearn from '../pages/subtitleLearn';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    name: 'index',\r\n    component: home,\r\n  },\r\n  {\r\n    path: '/home',\r\n    name: 'home',\r\n    component: home,\r\n  },\r\n  {\r\n    path: '/subtitleLearn',\r\n    name: 'subtitleLearn',\r\n    component: subtitleLearn,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n  {\r\n    path: '/schulte',\r\n    name: 'schulte',\r\n    component: schulte,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component } from 'react';\r\nimport './index.scss';\r\nimport _ from 'lodash';\r\nimport { parse, stringify, stringifyVtt, resync, toMS, toSrtTime, toVttTime } from 'subtitle';\r\nimport Audio from 'react-audioplayer';\r\n\r\nexport default class Schulte extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playing: true,\r\n            subtitleArr: [],\r\n            mAudio: null\r\n        }\r\n        this.togglePlay = this.togglePlay.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let mAudio = document.getElementById(\"mAudio\")\r\n\r\n        fetch(\"./DeepaNarayan_2019I.srt\").then((res) => res.text()).then((text) => {\r\n            let subtitleArr = parse(text)\r\n            subtitleArr.forEach((item) => {\r\n                item.selected = false\r\n            })\r\n\r\n\r\n            mAudio.ontimeupdate = () => {\r\n                let selectedSubTitle = subtitleArr.filter((item) => item.selected)[0]\r\n                if (!selectedSubTitle || !(mAudio.currentTime * 1000 > selectedSubTitle.start && mAudio.currentTime * 1000 < selectedSubTitle.end)) {\r\n                    subtitleArr.forEach((item) => {\r\n                        item.selected = false\r\n                    })\r\n                    for (let item of subtitleArr) {\r\n                        if (mAudio.currentTime * 1000 > item.start && mAudio.currentTime * 1000 < item.end) {\r\n                            item.selected = true\r\n                            break\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        subtitleArr: subtitleArr.filter((item) => item.end < (2 * 60 + 10) * 1000)\r\n                    })\r\n                }\r\n            }\r\n            this.setState({\r\n                mAudio,\r\n                subtitleArr: subtitleArr.filter((item) => item.end < (2 * 60 + 10) * 1000)\r\n            })\r\n        })\r\n    }\r\n\r\n    togglePlay() {\r\n        this.setState({\r\n            playing: !this.state.playing\r\n        })\r\n        this.state.playing ? this.state.mAudio.pause() : this.state.mAudio.play()\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"sl-container\">\r\n            {this.state.subtitleArr.map((item) => (\r\n                <div className={['sl-subtitle', item.selected ? 'selected' : ''].join(' ')}>{item.text}</div>\r\n            ))}\r\n            <audio\r\n                width={600}\r\n                height={400}\r\n                autoPlay={true}\r\n                paused={true}\r\n                id=\"mAudio\"\r\n                src=\"./DeepaNarayan.mp3\"\r\n            />\r\n            <div className={['music-controler', this.state.playing ? 'music-controler-playing' : ''].join(' ')} onClick={this.togglePlay}>\r\n                <i className=\"iconfont rl-music\"></i>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Route, Link, Switch, withRouter,\r\n} from 'react-router-dom'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport './App.scss';\r\nimport routes from './router'\r\nimport _ from 'lodash'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const pageSize = isMobile ? routes.length : 9;\r\n    let pages = isMobile ? 1 : parseInt(routes.length / pageSize, 10)\r\n    pages = (!isMobile && routes.length % pageSize != 0) ? pages + 1 : pages\r\n    const gridTemplateColumns = isMobile ? `repeat(1,${window.innerWidth * 0.9}px)` : 'repeat(3,12rem)'\r\n    const gridTemplateRows = isMobile ? `repeat( ${routes.length},${window.innerWidth * 0.9}px)` : 'repeat(3,12rem)'\r\n    const marginTop = isMobile ? window.innerWidth * 0.05 : 5\r\n    const pageItems = []\r\n    for (let i = 0; i < pages; i += 1) {\r\n      pageItems.push(i)\r\n    }\r\n    let colors = ['#3066BE', '#A5668B', '#69306D', '#3C3744', '#248232', '#8C4843', '#593C8F', '#00ad5d', '#0FA3B1']\r\n    colors = _.shuffle(colors)\r\n    let links = routes.slice(0, pageSize)\r\n    links.forEach((item, index) => {\r\n      item.bg = colors[index]\r\n    })\r\n    this.state = {\r\n      pages,\r\n      colors,\r\n      pageSize,\r\n      pageItems,\r\n      marginTop,\r\n      gridTemplateRows,\r\n      gridTemplateColumns,\r\n      curPage: 0,\r\n      links\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pathname } = this.props.location;\r\n    this.setState({\r\n      isHome: pathname == '/',\r\n    });\r\n\r\n    this.props.history.listen((router) => {\r\n      this.onRouterChange(router)\r\n    });\r\n  }\r\n\r\n  onRouterChange(router) {\r\n    const { pathname } = router\r\n    this.setState({\r\n      isHome: pathname == '/',\r\n    })\r\n  }\r\n\r\n  pageToggle(curPage) {\r\n    let { pageSize, colors } = this.state\r\n    const links = routes.slice(curPage * pageSize, curPage * pageSize + pageSize)\r\n    colors = _.shuffle(colors)\r\n    links.forEach((item, index) => {\r\n      item.bg = colors[index]\r\n    })\r\n    this.setState({\r\n      links,\r\n      curPage,\r\n    });\r\n  }\r\n\r\n  enterLink() {\r\n    this.setState({\r\n      isHome: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.isHome && <div className=\"header\" />}\r\n        {this.state.isHome && (\r\n          <div className=\"body\">\r\n            <div className=\"links-container\" style={{ gridTemplateColumns: this.state.gridTemplateColumns, gridTemplateRows: this.state.gridTemplateRows, height: isMobile ? '100%' : 'fit-content' }}>\r\n              {this.state.links.map((link, index) => (\r\n                <Link key={index} className=\"link-container\" style={{ marginTop: `${this.state.marginTop}px`, backgroundColor: `${link.bg}` }} onClick={this.enterLink.bind(this)} to={link.path}>\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n              {isMobile && <div className=\"bottom\">~~到底了~~</div>}\r\n            </div>\r\n            {(!isMobile && this.state.pages > 1) && (\r\n              <div className=\"pageitems-container\">\r\n                {\r\n                  this.state.pageItems.map((pageItem) => (\r\n                    <div key={pageItem} className={`page-item ${pageItem === this.state.curPage ? 'page-item-active' : null}`} onClick={this.pageToggle.bind(this, pageItem)} />\r\n                  ))\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {!this.state.isHome && (\r\n          <Switch>\r\n            {routes.map((route, index) => (\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                component={route.component}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        )}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}